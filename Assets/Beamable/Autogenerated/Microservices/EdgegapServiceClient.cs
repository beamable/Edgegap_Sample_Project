//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.EdgegapService"/> </summary
    public sealed class EdgegapServiceClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public EdgegapServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "EdgegapService";
            }
        }
        
        /// <summary>
        /// Call the DeployServer method on the EdgegapService microservice
        /// <see cref="Beamable.Microservices.EdgegapService.DeployServer"/>
        /// </summary>
        public Beamable.Common.Promise<DeploymentResponse> DeployServer(string[] ipAddresses, System.Collections.Generic.Dictionary<string, string> environmentVariables)
        {
            object raw_ipAddresses = ipAddresses;
            object raw_environmentVariables = environmentVariables;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("ipAddresses", raw_ipAddresses);
            serializedFields.Add("environmentVariables", raw_environmentVariables);
            return this.Request<DeploymentResponse>("EdgegapService", "DeployServer", serializedFields);
        }
        
        /// <summary>
        /// Call the GetDeploymentStatus method on the EdgegapService microservice
        /// <see cref="Beamable.Microservices.EdgegapService.GetDeploymentStatus"/>
        /// </summary>
        public Beamable.Common.Promise<DeploymentStatus> GetDeploymentStatus(string requestId)
        {
            object raw_requestId = requestId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("requestId", raw_requestId);
            return this.Request<DeploymentStatus>("EdgegapService", "GetDeploymentStatus", serializedFields);
        }
        
        /// <summary>
        /// Call the GetDeploymentInfo method on the EdgegapService microservice
        /// <see cref="Beamable.Microservices.EdgegapService.GetDeploymentInfo"/>
        /// </summary>
        public Beamable.Common.Promise<DeploymentResponse> GetDeploymentInfo(string requestId)
        {
            object raw_requestId = requestId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("requestId", raw_requestId);
            return this.Request<DeploymentResponse>("EdgegapService", "GetDeploymentInfo", serializedFields);
        }
        
        /// <summary>
        /// Call the DeleteDeployment method on the EdgegapService microservice
        /// <see cref="Beamable.Microservices.EdgegapService.DeleteDeployment"/>
        /// </summary>
        public Beamable.Common.Promise<bool> DeleteDeployment(string requestId)
        {
            object raw_requestId = requestId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("requestId", raw_requestId);
            return this.Request<bool>("EdgegapService", "DeleteDeployment", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersEdgegapServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Array_System_String : MicroserviceClientDataWrapper<string[]>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Collections_Generic_Dictionary_System_String_System_String : MicroserviceClientDataWrapper<System.Collections.Generic.Dictionary<string, string>>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForEdgegapServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<EdgegapServiceClient>();
        }
        
        public static EdgegapServiceClient EdgegapService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<EdgegapServiceClient>();
        }
    }
}
